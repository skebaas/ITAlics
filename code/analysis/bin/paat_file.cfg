[Default]
bin_dir = script_dir
data_dir = f'{script_dir}/../../../data'
CPU_CORES = 16
ROI_dir = data_dir+"/MNI_rois/"
ROI_suffix = "_mni.nii"
#### ADD PATHS TO YOUR ROIS HERE WITH THE NAME SO THEY CAN BE REFERENCED IN PPI_ROIS ####
ROIS = {
    'ROI_white': ROI_dir+"white_matter_mask"+ROI_suffix,
    'ROI_L_insula': ROI_dir+"left_insula"+ROI_suffix,
    'ROI_R_insula': ROI_dir+"right_insula"+ROI_suffix,
    'ROI_L_amyg': ROI_dir+"left_amygdala"+ROI_suffix,
    'ROI_R_amyg': ROI_dir+"right_amygdala"+ROI_suffix,
    'ROI_VS_L': ROI_dir+"left_accumbens_area"+ROI_suffix,
    'ROI_VS_R': ROI_dir+"right_accumbens_area"+ROI_suffix,
    'ROI_VS_LR': ROI_dir+"bilateral_accumbens_area"+ROI_suffix,
    'ROI_BA9_L': ROI_dir+"left_rostral_middle_frontal"+ROI_suffix,
    'ROI_BA9_R': ROI_dir+"right_rostral_middle_frontal"+ROI_suffix,
    'ROI_BA10': ROI_dir+"medial_brodmann_area_10"+ROI_suffix,
    'ROI_BR1': ROI_dir+"beckmann_region_1"+ROI_suffix,
    'ROI_BR2': ROI_dir+"beckmann_region_2"+ROI_suffix,
    'ROI_BR3': ROI_dir+"beckmann_region_3"+ROI_suffix,
    'ROI_BR4': ROI_dir+"beckmann_region_4"+ROI_suffix,
    'ROI_BR9': ROI_dir+"beckmann_region_9"+ROI_suffix, 
    'ROI_PG_ACC': ROI_dir+"pregenual_ACC"+ROI_suffix,
    'ROI_D_ACC': ROI_dir+"dorsal_ACC"+ROI_suffix,
    'ROI_SG_ACC': ROI_dir+"subgenual_ACC"+ROI_suffix,
    'ROI_L_MFG_compensate': ROI_dir+"left_anterior_MFG_compensate"+ROI_suffix,
    'ROI_R_MFG_compensate': ROI_dir+"right_anterior_MFG_compensate"+ROI_suffix,
    'ROI_L_VLPFC': ROI_dir+"left_brodmann_area_47"+ROI_suffix,
    'ROI_R_VLPFC': ROI_dir+"right_brodmann_area_47"+ROI_suffix,
    'ROI_L_ant_insula': ROI_dir+"left_anterior_insula"+ROI_suffix,
    'ROI_R_ant_insula': ROI_dir+"right_anterior_insula"+ROI_suffix,
    'ROI_putamen_L': ROI_dir+"left_putamen"+ROI_suffix,
    'ROI_putamen_R': ROI_dir+"right_putamen"+ROI_suffix,
    'ROI_caudate_head_L': ROI_dir+"left_caudate"+ROI_suffix,
    'ROI_caudate_head_R': ROI_dir+"right_caudate"+ROI_suffix,
    'ROI_amygdala_LR': ROI_dir+"bilateral_amygdala"+ROI_suffix,
    'ROI_leftVLPFC': ROI_dir+"leftVLPFC_2mm"+ROI_suffix,
    'ROI_BA32': ROI_dir+"brodmann_area_32"+ROI_suffix,
    'ROI_BA24_32': ROI_dir+"BA24_32"+ROI_suffix, 
    'ROI_BA24': ROI_dir+"BA24"+ROI_suffix,
    'ROI_BA32Left': ROI_dir+"BA32Left"+ROI_suffix, 
    'ROI_BA25': ROI_dir+"BA25"+ROI_suffix}

[modelspec]
concatenate_runs   = False
high_pass_filter_cutoff = 128 
input_units = 'secs'
time_repetition  = 1.5

[level1design]
bases = {'hrf':{'derivs': [0,0]}}
timing_units = 'secs'
microtime_onset = 1
microtime_resolution = 16
model_serial_correlations = 'FAST'

[level1estimate]
estimation_method = {'Classical' : 1}

[contrastestimate]
use_derivs = True

[Task]
output_name = 'test_run' # Output name
sequence = 'paat' #name of sequence
runs = 3 #number of runs
BHV_struct = 'BHV*'

#################### GLM DESIGN INFORMATION ########################
glm_design = '/usr/local/software/ITAlics/linears/linear_efn.txt'
# File path to design matrix script
design_script = 'encore_model_for_ITAlics'
# Set the high pass filter cutoff
high_pass_filter_cutoff = 256
####################################################################

#Specify Contrasts
contrasts = [    
    ("0back fear-0back noface","T",["zerofear*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("0back fear-0back neutral","T",["zerofear*bf(1)","zeroneutral*bf(1)"],[1,-1]),
    ("0back happy-0back noface","T",["zerohappy*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("0back happy-0back neutral","T",["zerohappy*bf(1)","zeroneutral*bf(1)"],[1,-1]),
    ("0back neutral-0back noface","T",["zeroneutral*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("2back fear-2back noface","T",["twofear*bf(1)","twoblank*bf(1)"],[1,-1]),
    ("2back fear-2back neutral","T",["twofear*bf(1)","twoneutral*bf(1)"],[1,-1]),
    ("2back happy-2back noface","T",["twohappy*bf(1)","twoblank*bf(1)"],[1,-1]),
    ("2back happy-2back neutral","T",["twohappy*bf(1)","twoneutral*bf(1)"],[1,-1]),
    ("2back neutral-2back noface","T",["twoneutral*bf(1)","twoblank*bf(1)"],[1,-1]),
    ("2back noface-0back noface","T",["twoblank*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("2back neutral-0back neutral","T",["twoneutral*bf(1)","zeroneutral*bf(1)"],[1,-1]),
    ("2back fear-0back fear","T",["twofear*bf(1)","zerofear*bf(1)"],[1,-1]),
    ("2back happy-0back happy","T",["twohappy*bf(1)","zerohappy*bf(1)"],[1,-1]),
    ("2back emotion-2back noface","T",["twofear*bf(1)","twohappy*bf(1)","twoblank*bf(1)"],[.5,.5,-1]),
    ("0back emotion-0back noface","T",["zerofear*bf(1)","zerohappy*bf(1)","zeroblank*bf(1)"],[.5,.5,-1]),
    ("2back emotion-2back neutral","T",["twofear*bf(1)","twohappy*bf(1)","twoneutral*bf(1)"],[.5,.5,-1]),
    ("0back emotion-0back neutral","T",["zerofear*bf(1)","zerohappy*bf(1)","zeroneutral*bf(1)"],[.5,.5,-1]),
    ("2back fear-0back noface","T",["twofear*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("2back happy-0back noface","T",["twohappy*bf(1)","zeroblank*bf(1)"],[1,-1]),
    ("2back neutral-0back noface","T",["twoneutral*bf(1)","zeroblank*bf(1)"],[1,-1]),
	("2back emotion-0back noface","T",["twofear*bf(1)","twohappy*bf(1)","zeroblank*bf(1)"],[.5,.5,-1]),
	("0back noface","T",["zeroblank*bf(1)"],[1]),
	("0back neutral","T",["zeroneutral*bf(1)"],[1]),
	("0back fear","T",["zerofear*bf(1)"],[1]),
	("0back happy","T",["zerohappy*bf(1)"],[1]),
	("2back noface","T",["twoblank*bf(1)"],[1]),
	("2back neutral","T",["twoneutral*bf(1)"],[1]),
	("2back fear","T",["twofear*bf(1)"],[1]),
	("2back happy","T",["twohappy*bf(1)"],[1])]  
# Specify ROIS to be used in GPPI
## You can either select from predefined paths in ROIS dict above or add a custom path to your ROI
PPI_ROIS = [
    ("bilateral_amygdala",ROIS['ROI_amygdala_LR']), 
    ("left_amygdala",ROIS['ROI_L_amyg']), 
    ("right_amygdala", ROIS['ROI_R_amyg'])]
# Specify PPI Contrasts
ppi_contrasts = [	
	("2back emotion-2back noface","T",["PPI_twofear","PPI_twohappy","PPI_twoblank"],[.5,.5,-1]),
	("0back noface","T",["PPI_zeroblank"],[1]),
	("0back neutral","T",["PPI_zeroneutral"],[1]),
	("0back fear","T",["PPI_zerofear"],[1]),
	("0back happy","T",["PPI_zerohappy"],[1]),
	("2back noface","T",["PPI_twoblank"],[1]),
	("2back neutral","T",["PPI_twoneutral"],[1]),
	("2back fear","T",["PPI_twofear"],[1]),
	("2back happy","T",["PPI_twohappy"],[1])]